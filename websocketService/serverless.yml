service: lobby-websocket
frameworkVersion: "^2.71.0"

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage, "dev"}
  region: ${opt:region, "eu-central-1"}
  websocketsApiName: lobby-websocket
  websocketsApiRouteSelectionExpression: $request.body.event
  versionFunctions: false
  iam:
    role:
      name: lobby-serverless-ws-role
      path: /service-role/
      managedPolicies:
        - "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess"
        - "arn:aws:iam::aws:policy/AmazonAPIGatewayInvokeFullAccess"

functions:
  lobby-websocket:
    name: lobby-websocket
    handler: index.handler
    memorySize: 1024
    timeout: 5
    environment:
      REDIS_HOST: ${file(../env.${opt:stage, self:provider.stage}.json):REDIS_HOST}
      REDIS_PASSWORD: ${file(../env.${opt:stage, self:provider.stage}.json):REDIS_PASSWORD}
      REDIS_PORT: ${file(../env.${opt:stage, self:provider.stage}.json):REDIS_PORT}
    events:
      - websocket:
          route: $connect
      - websocket:
          route: $disconnect
      - websocket:
          route: chatMessage
      - websocket:
          route: chatHistory
      - websocket:
          route: addGame
      - websocket:
          route: deleteGame
      - websocket:
          route: createTable
      - websocket:
          route: deleteTable
      - websocket:
          route: userJoinTable
      - websocket:
          route: userLeftTable
      - websocket:
          route: getPlayersCount
